<Window x:Class="EdSofta.Views.Windows.TestingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EdSofta.Views.Windows"
        xmlns:models="clr-namespace:EdSofta.Models"
        xmlns:wpf="clr-namespace:TheArtOfDev.HtmlRenderer.WPF;assembly=HtmlRenderer.WPF"
        xmlns:src="clr-namespace:EdSofta.ViewModels.Utility"
        xmlns:converters="clr-namespace:EdSofta.ViewModels.Converters"
        xmlns:components="clr-namespace:EdSofta.Views.Components"
        mc:Ignorable="d"
        WindowState="Maximized"
        Background="White"
        WindowStyle="None"
        FontFamily="{DynamicResource Mulish}"
        FontSize="14"
        Title="TestingWindow" Height="700" Width="1000">

    <Window.Resources>
        <converters:ModalVisibilityConverter x:Key="ModalVisibilityConverter"/>
        <converters:IndexConverter x:Key="IndexConverter"/>
        <converters:MultiObjectsToValueConverter x:Key="MultiObjectsToValueConverter"/>
        <converters:NumberToTimeConverter x:Key="NumberToTimeConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <Grid UseLayoutRounding="True">


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="27*"/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>


            <StackPanel Grid.Column="1"
                        Margin="0,40,0,0">

                <Button Style="{DynamicResource RoundItemButtonStyle}"
                                Foreground="{DynamicResource ThemeRed}"
                                Cursor="Hand"
                                Name="LogoutButton"
                                Click="LogoutButton_Click"
                                Width="46"
                                Height="46">
                    <Canvas Grid.Row="0"
                                    Width="24"
                                    Height="24"
                                    Grid.Column="0">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="0" Y="0"/>
                        </Canvas.RenderTransform>
                        <Canvas.Resources/>
                        <Path Data="{StaticResource Icons.Logout}"
                                      StrokeThickness="2" StrokeEndLineCap="Round"
                                      Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                    </Canvas>

                    <Button.ToolTip>
                        <ToolTip ClipToBounds="False">
                            <ToolTip.Template>
                                <ControlTemplate>
                                    <Border CornerRadius="3"
                                                    ClipToBounds="False"
                                                    Margin="6"
                                                    BorderThickness="1"
                                                    Background="#F4F4F4"
                                                    BorderBrush="{DynamicResource ThemeGrey}">
                                        <Border.Effect>
                                            <DropShadowEffect Opacity="0.18" 
                                                                      Color="DarkGray"
                                                                      ShadowDepth="0"
                                                                      BlurRadius="5"
                                                                      x:Name="DropShadowEffect"/>
                                        </Border.Effect>

                                        <Grid Margin="10,7">
                                            <TextBlock Text="Logout"
                                                               Style="{DynamicResource Body.Small.Regular}"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToolTip.Template>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>


                <Border CornerRadius="10"
                        Margin="0,50,0,0">
                    <StackPanel Margin="0,15">
                        <Button Style="{DynamicResource RoundNeutralItemButtonStyle}"
                                Foreground="#172B4D"
                                Cursor="Hand"
                                Name="CalculatorButton"
                                Click="CalculatorButton_OnClick"
                                Width="46"
                                Height="46">
                            <Canvas Grid.Row="0"
                                    Width="24"
                                    Height="24"
                                    Grid.Column="0">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Data="{StaticResource Icons.Calculator}"
                                      Stretch="Uniform"
                                      Height="24"
                                      Width="24"
                                      StrokeThickness="2.2" StrokeEndLineCap="Round"
                                      Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Canvas>

                        </Button>

                        <TextBlock Text="Calculator"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   Style="{DynamicResource Body.Small.SemiBold}"
                                   Margin="0,3,0,20"/>

                        <Button Style="{DynamicResource RoundNeutralItemButtonStyle}"
                                Foreground="#172B4D"
                                Cursor="Hand"
                                Name="BookmarkButton"
                                Click="BookmarkButton_OnClick"
                                Width="46"
                                Height="46">
                            <Canvas Grid.Row="0"
                                    Width="24"
                                    Height="24"
                                    Grid.Column="0">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Data="{StaticResource Icons.Bookmark}"
                                      Stretch="Uniform"
                                      Height="24"
                                      Width="24"
                                      StrokeThickness="2.2" StrokeEndLineCap="Round"
                                      Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Canvas>

                        </Button>

                        <TextBlock Text="Save Question"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   Style="{DynamicResource Body.Small.SemiBold}"
                                   Margin="0,3,0,20"/>

                        <Button Style="{DynamicResource RoundNeutralItemButtonStyle}"
                                Foreground="#172B4D"
                                Click="ReportErrorButton_OnClick"
                                Cursor="Hand"
                                Width="46"
                                Height="46">
                            <Canvas Grid.Row="0"
                                    Width="24"
                                    Height="24"
                                    Grid.Column="0">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Data="{StaticResource Icons.Exclamation-Circle}"
                                      Stretch="Uniform"
                                      Height="24"
                                      Width="24"
                                      StrokeThickness="2.2" StrokeEndLineCap="Round"
                                      Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Canvas>

                        </Button>

                        <TextBlock Text="Report Error"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   Style="{DynamicResource Body.Small.SemiBold}"
                                   Margin="0,3,0,20"/>

                    </StackPanel>
                </Border>
            </StackPanel>
        </Grid>


        <Grid Grid.Column="1" Name="ContentContainerGrid">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--Header-->

            <Grid Margin="0,40,0,10"
                  Grid.Row="0" 
                  Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="35*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal"
                                Grid.Column="1">
                        <Canvas Width="24"
                                Height="24">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Path Data="{StaticResource Icons.Clock}"
                                  StrokeThickness="2" StrokeEndLineCap="Round"
                                  Stroke="{DynamicResource ButtonBackground}"/>
                        </Canvas>

                        <TextBlock Text="{Binding TimeLeft, Converter={StaticResource NumberToTimeConverter}}"
                                   Foreground="#172B4D"
                                   Style="{DynamicResource Heading.Large.Regular}"
                                   Margin="8,0" />

                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsCorrection}" Value="true">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding WithTimer}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"
                                Grid.Column="1">

                        <TextBlock Text="Practice"
                                   Foreground="#172B4D"
                                   Style="{DynamicResource Heading.Large.Regular}"
                                   Margin="8,0" />

                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsCorrection}" Value="False"/>
                                            <Condition Binding="{Binding WithTimer}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>


                    <TextBlock Text="Correction"
                               Foreground="#172B4D"
                               Visibility="{Binding IsCorrection, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Style="{DynamicResource Heading.Large.Regular}"
                               Grid.Column="1"
                               VerticalAlignment="Center" />

                </Grid>

                <Button Grid.Column="1"
                        Style="{DynamicResource ThemeButton}"
                        Margin="25,0"
                        Height="40"
                        Name="ActionButton"
                        Click="ActionButton_OnClick"
                        HorizontalAlignment="Right">

                    <Grid Margin="35,0">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Canvas Width="24"
                                Height="24"
                                Name="ActionCheckCanvas"
                                Grid.Column="0" 
                                VerticalAlignment="Top">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Data="{StaticResource Icons.Check}"
                                  StrokeThickness="2" StrokeEndLineCap="Round"
                                  Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Canvas>

                            <TextBlock Text="SUBMIT"
                                   Grid.Column="1"
                                   Name="ActionTextBlock"
                                   VerticalAlignment="Center"
                                   Margin="5,0,0,0"
                                   Style="{DynamicResource Body.Medium.SemiBold}"/>

                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsCorrection}" Value="true">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <Grid Visibility="{Binding IsCorrection, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Canvas Width="24"
                                    Height="24"
                                    Grid.Column="0" 
                                    VerticalAlignment="Top">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Canvas.RenderTransform>
                                <Canvas.Resources/>
                                <Path Data="{StaticResource Icons.Chevron-Down}"
                                  StrokeThickness="2" StrokeEndLineCap="Round"
                                  Width="24"
                                  Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>

                            </Canvas>

                            <TextBlock Text="VIEW RESULT"
                                   Grid.Column="1"
                                   VerticalAlignment="Center"
                                   Margin="5,0,0,0"
                                   Style="{DynamicResource Body.Medium.SemiBold}"/>

                        </Grid>

                    </Grid>

                </Button>
            </Grid>


            <TabControl Style="{DynamicResource TestingTabControlStyle}"
                        ItemsSource="{Binding QuestionBanks.Result}"
                        BorderThickness="0"
                        Grid.Row="1"
                        SelectedIndex="0"
                        IsHitTestVisible="{Binding QuestionBanks.IsSuccessfullyCompleted}"
                        Margin="0,0,0,10"
                        Name="TestTabControl"
                        BorderBrush="Transparent">
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="models:QuestionBank">
                        <TextBlock Text="{Binding subjectName}"
                                   Name="TabTextBlock"
                                   FontSize="20">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <!--<Setter Property="FontWeight" Value="Semibold"/>-->
                                    <Setter Property="Foreground" Value="{DynamicResource ThemeGrey}"/>
                                    <Setter Property="FontWeight" Value="Semibold"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}" Value="true">
                                            <Setter Property="Foreground" Value="#172B4D"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplate>
                    <DataTemplate DataType="models:QuestionBank">
                       <Grid>
                           <Grid.RowDefinitions>
                               <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                               <RowDefinition Height="Auto"/>
                           </Grid.RowDefinitions>

                           <Grid Grid.Row="0">
                               <Grid.ColumnDefinitions>
                                   <ColumnDefinition Width="1*"/>
                                   <ColumnDefinition Width="35*"/>
                                   <ColumnDefinition Width="1*"/>
                               </Grid.ColumnDefinitions>

                                <TextBlock FontWeight="Medium"
                                           Grid.Column="1"
                                          Margin="0,25,0,10">
                                   Question
                                   <TextBlock Text="{Binding CurrentQuestionNumber}"
                                              VerticalAlignment="Center"/> of 
                                   <TextBlock Text="{Binding Size}"/>
                               </TextBlock>

                               <Separator Background="#F4F4F4"
                                          Margin="0"
                                          Grid.ColumnSpan="3"
                                          Grid.Column="0"
                                          VerticalAlignment="Top"/>
                            </Grid>

                           <ScrollViewer Grid.Row="1"
                                         Style="{DynamicResource ScrollViewerStyle}">
                               
                               <Grid>
                                   <Grid.ColumnDefinitions>
                                       <ColumnDefinition Width="1*"/>
                                       <ColumnDefinition Width="35*"/>
                                       <ColumnDefinition Width="1*"/>
                                   </Grid.ColumnDefinitions>

                                    <StackPanel Grid.Column="1">

                                        <wpf:HtmlPanel Text="{Binding CurrentQuestionData.Question}"
                                                       Focusable="False"/>

                                        <ListView Style="{DynamicResource ListViewStyle}"
                                             HorizontalContentAlignment="Left"
                                             Background="Transparent"
                                             Focusable="False"
                                             PreviewMouseWheel="HandlePreviewMouseWheel"
                                             ItemsSource="{Binding CurrentQuestionData.Options}"
                                             BorderThickness="0"
                                             ScrollViewer.CanContentScroll="False"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                            <ListView.Resources>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="Margin" Value="0"/>
                                                    <Setter Property="Padding" Value="0"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ListViewItem">
                                                                <Grid Margin="0,-10,0,0">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <Grid Grid.Column="0"
                                                                      Margin="2.5,0">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>

                                                                        

                                                                        <Grid Grid.Column="0">

                                                                            <TextBlock Text="{Binding Key}"
                                                                               
                                                                                       FontSize="15"
                                                                                       Margin="2.55,0"
                                                                                       FontWeight="Medium"
                                                                                       VerticalAlignment="Center"
                                                                                       Foreground="{DynamicResource ThemeGrey}">
                                                                                <TextBlock.Style>
                                                                                    <Style TargetType="TextBlock">
                                                                                        <Style.Triggers>
                                                                                            <DataTrigger Binding="{Binding ElementName=CheckIcon, Path=Visibility}" Value="Visible">
                                                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                                                            </DataTrigger>

                                                                                            <DataTrigger Binding="{Binding ElementName=CrossIcon, Path=Visibility}" Value="Visible">
                                                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                                                            </DataTrigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </TextBlock.Style>
                                                                            </TextBlock>


                                                                            <Canvas Width="24"
                                                                                    Height="24"
                                                                                    Name="CheckIcon"
                                                                                    Grid.Column="0" 
                                                                                    VerticalAlignment="Center">
                                                                                <Canvas.RenderTransform>
                                                                                    <TranslateTransform X="0" Y="0"/>
                                                                                </Canvas.RenderTransform>
                                                                                <Canvas.Resources/>
                                                                                <Path Data="{StaticResource Icons.Check}"
                                                                                      StrokeThickness="2" StrokeEndLineCap="Round"
                                                                                      Stroke="{DynamicResource ThemeGreen}"/>

                                                                                <Canvas.Style>
                                                                                    <Style TargetType="Canvas">
                                                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                                                        <Style.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsCorrection}" Value="true"/>
                                                                                                    <Condition Value="true">
                                                                                                        <Condition.Binding>
                                                                                                            <MultiBinding Converter="{StaticResource MultiObjectsToValueConverter}">
                                                                                                                <Binding Path="Key"/>
                                                                                                                <Binding RelativeSource="{RelativeSource Self}" Mode="OneTime"/>
                                                                                                            </MultiBinding>
                                                                                                        </Condition.Binding>
                                                                                                    </Condition>
                                                                                                    <Condition Binding="{Binding IsAnsweredCorrectly}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                                            </MultiDataTrigger>

                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsCorrection}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsAnswer}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                                            </MultiDataTrigger>
                                                                                        </Style.Triggers>

                                                                                    </Style>
                                                                                </Canvas.Style>
                                                                            </Canvas>

                                                                            <Canvas Width="24"
                                                                                    Height="24"
                                                                                    Name="CrossIcon"
                                                                                    Grid.Column="0" 
                                                                                    VerticalAlignment="Center">
                                                                                <Canvas.RenderTransform>
                                                                                    <TranslateTransform X="0" Y="0"/>
                                                                                </Canvas.RenderTransform>
                                                                                <Canvas.Resources/>
                                                                                <Path Data="{StaticResource Icons.Times}"
                                                                                      StrokeThickness="0" StrokeEndLineCap="Round"
                                                                                      Fill="{DynamicResource ThemeRed}"/>

                                                                                <Canvas.Style>
                                                                                    <Style TargetType="Canvas">
                                                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                                                        <Style.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsCorrection}" Value="true"/>
                                                                                                    <Condition Value="true">
                                                                                                        <Condition.Binding>
                                                                                                            <MultiBinding Converter="{StaticResource MultiObjectsToValueConverter}">
                                                                                                                <Binding Path="Key"/>
                                                                                                                <Binding RelativeSource="{RelativeSource Self}" Mode="OneTime"/>
                                                                                                            </MultiBinding>
                                                                                                        </Condition.Binding>
                                                                                                    </Condition>
                                                                                                    <Condition Binding="{Binding IsAnsweredCorrectly}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                                            </MultiDataTrigger>

                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </Canvas.Style>
                                                                            </Canvas>
                                                                        </Grid>

                                                                        <RadioButton GroupName="OptionsButton"
                                                                                 Margin="7,0,20,0"
                                                                                 Click="ButtonBase_OnClick"
                                                                                 Tag="{Binding Key}"
                                                                                 IsEnabled="{Binding IsActive}"
                                                                                 Style="{DynamicResource TelegramRadioButton}"
                                                                                 VerticalContentAlignment="Center"
                                                                                 Grid.Column="1">
                                                                            <RadioButton.IsChecked>
                                                                                <MultiBinding Converter="{StaticResource MultiObjectsToValueConverter}">
                                                                                    <Binding Path="Key"/>
                                                                                    <Binding RelativeSource="{RelativeSource Self}" Mode="OneTime"/>
                                                                                </MultiBinding>
                                                                            </RadioButton.IsChecked>
                                                                        </RadioButton>
                                                                    </Grid>

                                                                    <wpf:HtmlPanel Text="{Binding Value}"
                                                                                    Focusable="False"
                                                                                    Margin="0,20,0,0"
                                                                                    Grid.Column="1"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListView.Resources>
                                        </ListView>

                                        <TextBlock Text="Answer"
                                                   Style="{DynamicResource Body.Medium.SemiBold}"
                                                   Visibility="{Binding IsCorrection, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   Margin="0,15,0,3"/>

                                        <wpf:HtmlPanel Text="{Binding CurrentQuestionData.Answer}"
                                                       Visibility="{Binding IsCorrection, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                       Focusable="False"/>

                                        <TextBlock Text="Answer"
                                                   Style="{DynamicResource Body.Medium.SemiBold}"
                                                   Visibility="{Binding CurrentQuestionData.IsTheoryAnswerVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   Margin="0,15,0,3"/>

                                        <wpf:HtmlPanel Text="{Binding CurrentQuestionData.Answer}"
                                                       Visibility="{Binding CurrentQuestionData.IsTheoryAnswerVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                       Focusable="False"/>

                                        <TextBlock Text="Explanation"
                                                   Style="{DynamicResource Body.Medium.SemiBold}"
                                                   Visibility="{Binding IsCorrection, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   Margin="0,15,0,3"/>

                                        <wpf:HtmlPanel Text="{Binding CurrentQuestionData.Explanation}"
                                                       Visibility="{Binding IsCorrection, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                       Focusable="False"/>
                                    </StackPanel>
                                </Grid>

                              
                           </ScrollViewer>

                           <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                               <Grid.ColumnDefinitions>
                                   <ColumnDefinition Width="1*"/>
                                   <ColumnDefinition Width="35*"/>
                                   <ColumnDefinition Width="1*"/>
                               </Grid.ColumnDefinitions>

                               <Separator Background="#F4F4F4"
                                          Margin="0"
                                          Grid.ColumnSpan="3"
                                          Grid.Column="0"
                                          Grid.Row="0"
                                          VerticalAlignment="Top"/>

                                <StackPanel Orientation="Horizontal"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Margin="0,10">
                                    <Button Style="{DynamicResource ThemeButton}"
                                            Height="40"
                                            Width="120"
                                            Margin="5,0"
                                            Cursor="Hand"
                                            FontWeight="SemiBold"
                                            Name="PreviousButton"
                                            Click="PreviousButton_OnClick">

                                        _Previous
                                    </Button>

                                    <Button Style="{DynamicResource ThemeButton}"
                                            Height="40"
                                            Width="120"
                                            Cursor="Hand"
                                            Name="NextButton"
                                            FontWeight="SemiBold"
                                            Click="NextButton_OnClick"
                                            Margin="5,0">
                                        _Next
                                    </Button>
                                </StackPanel>

                                <ListView Grid.Column="1"
                                          Grid.Row="1"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                          Name="ButtonListView"
                                          BorderThickness="0"
                                          Background="White"
                                          Style="{DynamicResource ListViewStyle}"
                                          ItemsSource="{Binding QuestionList}">
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel FlowDirection="LeftToRight"
                                                       Width="{Binding ElementName=ButtonListView, Path=ActualWidth, Mode=OneWay}"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>

                                    <ListView.Resources>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <Button Margin="2.5"
                                                                Width="32"
                                                                Tag="{Binding Tag, Mode=TwoWay}"
                                                                Name="PaginatorButton"
                                                                Click="PaginatorButton_OnClick"
                                                                Height="32">
                                                            <TextBlock VerticalAlignment="Center"
                                                                       HorizontalAlignment="Center"
                                                                       Text="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                                               AncestorType={x:Type ListViewItem}}, 
                                                                               Converter={StaticResource IndexConverter}}"/>

                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                                                    <Setter Property="Background" Value="{DynamicResource ComboButtonBackground}"/>
                                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource ComboButtonText}"/>
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="1"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource ComboButtonText[Active]}"/>
                                                                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ButtonText[Active]}"/>
                                                                                        <Trigger.EnterActions>
                                                                                            <BeginStoryboard>
                                                                                                <Storyboard>
                                                                                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" 
                                                                                                                    Storyboard.TargetName="border"
                                                                                                                    Duration="00:00:0.150" 
                                                                                                                    To="#0366D6"/>
                                                                                                </Storyboard>
                                                                                            </BeginStoryboard>
                                                                                        </Trigger.EnterActions>
                                                                                        <Trigger.ExitActions>
                                                                                            <BeginStoryboard>
                                                                                                <Storyboard FillBehavior="Stop">
                                                                                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                                                                    Storyboard.TargetName="border"
                                                                                                                    Duration="00:00:0.01" 
                                                                                                                    To="#A7CAF1"/>
                                                                                                </Storyboard>
                                                                                            </BeginStoryboard>
                                                                                        </Trigger.ExitActions>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="true">
                                                                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource ComboButtonBackground}"/>
                                                                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ComboButtonText}"/>
                                                                                        <Trigger.EnterActions>
                                                                                            <BeginStoryboard>
                                                                                                <Storyboard>
                                                                                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                                                                    Storyboard.TargetName="border"
                                                                                                                    Duration="00:00:0.050" 
                                                                                                                    To="#A7CAF1"/>
                                                                                                </Storyboard>
                                                                                            </BeginStoryboard>
                                                                                        </Trigger.EnterActions>
                                                                                        <Trigger.ExitActions>
                                                                                            <BeginStoryboard>
                                                                                                <Storyboard FillBehavior="Stop">
                                                                                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                                                                    Storyboard.TargetName="border"
                                                                                                                    Duration="00:00:0.050" 
                                                                                                                    To="#0366D6"/>
                                                                                                </Storyboard>
                                                                                            </BeginStoryboard>
                                                                                        </Trigger.ExitActions>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                                        <Setter Property="Background" TargetName="border" Value="#F4F4F4"/>
                                                                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemeGrey}"/>
                                                                                    </Trigger>

                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Answered">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonText[Active]}"/>
                                                                                        <Setter Property="Background"  Value="{DynamicResource ThemeGreen}"/>
                                                                                    </DataTrigger>

                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="Active">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource ComboButtonText[Active]}"/>
                                                                                        <Setter Property="Background"  Value="{DynamicResource ComboButtonBackground[Active]}"/>
                                                                                    </DataTrigger>

                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="IsPassed">
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                        <Setter Property="Background"  Value="{DynamicResource ThemeGreen}"/>
                                                                                    </DataTrigger>

                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="IsFailed">
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                        <Setter Property="Background"  Value="{DynamicResource ThemeRed}"/>
                                                                                    </DataTrigger>


                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.Resources>
                                </ListView>

                            </Grid>
                       </Grid>
                    </DataTemplate>
                </TabControl.ContentTemplate>

            </TabControl>
        </Grid>

        <Border Grid.Column="0"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Margin="0,100,0,0"
                Name="AlertPopup"
                Visibility="Hidden"
                Background="#350366D6"
                BorderThickness="1"
                BorderBrush="#350366D6"
                Height="45"
                CornerRadius="20">

            <TextBlock 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="15"
                Margin="20,0"
                Foreground="#153B50"
                Name="AlertText"/>


            <Border.RenderTransform>
                <TranslateTransform/>
            </Border.RenderTransform>

            <Border.Style>
                <Style TargetType="Border" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Visibility}" Value="Visible">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{DynamicResource Animate.SlideInUpDelayedMid}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

        </Border>

        <Separator Background="#F4F4F4"
                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                   Margin="0, 50"
                   Width="1"
                   Grid.Column="0"
                   HorizontalAlignment="Right"/>



        <!--Modals-->

        <Rectangle Name="Overlay"
                   Fill="#FF000000"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Opacity="0.4"
                   MouseDown="Overlay_OnMouseDown">
            <Rectangle.Visibility>
                <MultiBinding Converter="{StaticResource ModalVisibilityConverter}">
                    <Binding ElementName="ResultModal" Path="Visibility"/>
                    <Binding ElementName="ReportErrorModal" Path="Visibility"/>
                </MultiBinding>
            </Rectangle.Visibility>
        </Rectangle>

        

        <Border Name="ResultModal"
                Background="White"
                CornerRadius="10"
                Visibility="Hidden"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Grid.Column="0"
                Grid.ColumnSpan="2">

            <Grid Margin="0,0,0,15"
                  Height="600"
                  Width="500">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Margin="35,23,30,23"
                      Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="1"
                               Style="{DynamicResource Body.Medium.Bold}"
                               Foreground="#172B4D"
                               VerticalAlignment="Center"
                               TextWrapping="Wrap">
                        Test Results
                    </TextBlock>

                    <Button Grid.Column="1"
                            Click="CloseButton_OnClick"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Focusable="False"
                            Cursor="Hand"
                            Style="{DynamicResource CloseButton}">

                        <TextBlock FontFamily="{DynamicResource FontAwesome5.FreeSolid}"
                                   Text="&#xf00d;"
                                   FontSize="20"
                                   Style="{DynamicResource CloseButtonText}"/>

                    </Button>


                </Grid>

                <Separator Background="#F4F4F4"
                           Margin="0"
                           Grid.Row="0"
                           VerticalAlignment="Bottom"/>

                <ScrollViewer Style="{DynamicResource ScrollViewerStyle}"
                              Grid.Row="1">

                    <StackPanel>

                        <StackPanel Margin="35,25">

                            <Grid Name="HeaderGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0"
                                     Height="110"
                                     Width="110">
                                    <components:CircularProgressBar HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                SegmentColor="#0366D6" BackgroundColor="#350366D6" 
                                                                StrokeThickness="4"
                                                                Percentage="{Binding ResultViewModel.Result.Percentage}">

                                    </components:CircularProgressBar>
                                </Viewbox>

                                <TextBlock Grid.Column="0"
                                       Text="{Binding ResultViewModel.Result.Score}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Style="{DynamicResource Body.Small.SemiBold}"/>

                                <Grid Grid.Column="1"
                                  Margin="50,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Text="{Binding Comment}"
                                           Grid.Row="0"
                                           VerticalAlignment="Bottom"
                                           Margin="0,0,0,10"
                                           Foreground="#505255"
                                           Style="{DynamicResource Body.Medium.Regular}"/>

                                    <TextBlock Text="{Binding ResultViewModel.Result.PercentageString}"
                                           Grid.Row="1"
                                           Foreground="#172B4D"
                                           Style="{DynamicResource Heading.Large.Regular}"/>
                                </Grid>

                            </Grid>

                            <StackPanel Margin="0,50,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="1"
                                      HorizontalAlignment="Right">
                                        <Ellipse Height="40"
                                             Width="40"
                                             Fill="#350366D6"/>

                                        <Canvas Grid.Row="0"
                                            Width="24"
                                            Height="24"
                                            Grid.Column="0">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="0" Y="0"/>
                                            </Canvas.RenderTransform>
                                            <Canvas.Resources/>
                                            <Path Data="{StaticResource Icons.Clock}"
                                              StrokeThickness="2" StrokeEndLineCap="Round"
                                              Stroke="{DynamicResource ItemCircleForeground}"/>
                                        </Canvas>
                                    </Grid>

                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="Average Time Per Question"
                                               Grid.Row="0"
                                               VerticalAlignment="Bottom"
                                               Margin="0,0,0,10"
                                               Foreground="#172B4D"
                                               Style="{DynamicResource Heading.Medium.SemiBold}"/>

                                        <TextBlock Text="{Binding ResultViewModel.Result.AverageTimeString}"
                                               Grid.Row="1"
                                               Foreground="#505255"
                                               Style="{DynamicResource Body.Medium.Regular}"/>
                                    </Grid>
                                </Grid>

                                <Grid Margin="0,28">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="1"
                                      HorizontalAlignment="Right">
                                        <Ellipse Height="40"
                                             Width="40"
                                             Fill="#350366D6"/>

                                        <Canvas Grid.Row="0"
                                            Width="24"
                                            Height="24"
                                            Grid.Column="0">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="0" Y="0"/>
                                            </Canvas.RenderTransform>
                                            <Canvas.Resources/>
                                            <Path Data="{StaticResource Icons.Clock}"
                                              StrokeThickness="2" StrokeEndLineCap="Round"
                                              Stroke="{DynamicResource ItemCircleForeground}"/>
                                        </Canvas>
                                    </Grid>

                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="Total Time Used"
                                               Grid.Row="0"
                                               VerticalAlignment="Bottom"
                                               Margin="0,0,0,10"
                                               Foreground="#172B4D"
                                               Style="{DynamicResource Heading.Medium.SemiBold}"/>

                                        <TextBlock Text="{Binding ResultViewModel.Result.TimeUsedString}"
                                               Grid.Row="1"
                                               Foreground="#505255"
                                               Style="{DynamicResource Body.Medium.Regular}"/>
                                    </Grid>
                                </Grid>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="1"
                                      HorizontalAlignment="Right">
                                        <Ellipse Height="40"
                                             Width="40"
                                             Fill="#350366D6"/>

                                        <Canvas Grid.Row="0"
                                            Width="24"
                                            Height="24"
                                            Grid.Column="0">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="0" Y="0"/>
                                            </Canvas.RenderTransform>
                                            <Canvas.Resources/>
                                            <Path Data="{StaticResource Icons.Collection}"
                                              StrokeThickness="2" StrokeEndLineCap="Round"
                                              Stroke="{DynamicResource ItemCircleForeground}"/>
                                        </Canvas>
                                    </Grid>

                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="Subjects Taken"
                                               Grid.Row="0"
                                               VerticalAlignment="Bottom"
                                               Margin="0,0,0,10"
                                               Foreground="#172B4D"
                                               Style="{DynamicResource Heading.Medium.SemiBold}"/>

                                        <TextBlock Text="{Binding ResultViewModel.Result.SubjectsList}"
                                               Grid.Row="1"
                                               Foreground="#505255"
                                               Style="{DynamicResource Body.Medium.Regular}"/>
                                    </Grid>
                                </Grid>
                            </StackPanel>

                        </StackPanel>

                        <Separator Background="#F4F4F4"
                                   Margin="0"
                                   VerticalAlignment="Bottom"/>

                        <StackPanel Margin="0,25">

                            <TextBlock Text="Topics Review"
                                       Style="{DynamicResource Heading.Large.Regular}"
                                       Foreground="#172B4D"
                                       Margin="35,0"/>

                            <Grid>
                                <ListView Margin="0,10"
                                          Style="{DynamicResource ListViewStyle}"
                                          HorizontalContentAlignment="Left"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          PreviewMouseWheel="HandlePreviewMouseWheel"
                                          ItemsSource="{Binding ResultViewModel.Result.Grades}"
                                          ScrollViewer.CanContentScroll="False"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                                    <ListView.Resources>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <Grid Margin="0,5">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <Grid Grid.Row="0"
                                                                  Cursor="Hand"
                                                                  Name="ItemGrid"
                                                                  MouseDown="ItemGrid_OnMouseDown"
                                                                  Background="#F4F4F4">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>

                                                                <Grid Grid.Column="1"
                                                                      Margin="0,0,35,0"
                                                                  HorizontalAlignment="Right">

                                                                    <Canvas Grid.Row="0"
                                                                        Width="24"
                                                                        Height="24"
                                                                        Visibility="{Binding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                        Grid.Column="0">
                                                                        <Canvas.RenderTransform>
                                                                            <TranslateTransform X="0" Y="0"/>
                                                                        </Canvas.RenderTransform>
                                                                        <Canvas.Resources/>
                                                                        <Path Data="{StaticResource Icons.Chevron-Down}"
                                                                          StrokeThickness="2" StrokeEndLineCap="Round"
                                                                          Stroke="{DynamicResource ItemCircleForeground}"/>
                                                                    </Canvas>

                                                                    <Canvas Grid.Row="0"
                                                                            Width="24"
                                                                            Height="24"
                                                                            Grid.Column="0">
                                                                        <Canvas.RenderTransform>
                                                                            <TranslateTransform X="0" Y="0"/>
                                                                        </Canvas.RenderTransform>
                                                                        <Canvas.Resources/>
                                                                        <Path Data="{StaticResource Icons.Chevron-Up}"
                                                                              StrokeThickness="2" StrokeEndLineCap="Round"
                                                                              Stroke="{DynamicResource ItemCircleForeground}"/>

                                                                        <Canvas.Style>
                                                                            <Style TargetType="Canvas">
                                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsOpen}" Value="False">
                                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Canvas.Style>
                                                                    </Canvas>
                                                                </Grid>

                                                                <Grid Grid.Column="0"
                                                                      Margin="35,10,0,10">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition/>
                                                                    </Grid.RowDefinitions>

                                                                    <TextBlock Text="{Binding Name}"
                                                                           Grid.Row="0"
                                                                           VerticalAlignment="Bottom"
                                                                           Margin="0,0,0,10"
                                                                           Foreground="#172B4D"
                                                                           Style="{DynamicResource Body.Large.SemiBold}"/>

                                                                   <StackPanel Orientation="Horizontal"
                                                                               Grid.Row="1">
                                                                       <TextBlock Text="{Binding Count}"
                                                                                  Foreground="#505255"
                                                                                  Style="{DynamicResource Body.Medium.Regular}"/>

                                                                       <TextBlock Text="Topic(s)"
                                                                                  Foreground="#505255"
                                                                                  Margin="4,0"
                                                                                  Style="{DynamicResource Body.Medium.Regular}"/>
                                                                   </StackPanel>

                                                                </Grid>
                                                            </Grid>

                                                            <Grid Grid.Row="1"
                                                                  Visibility="{Binding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                <ListView Margin="0,10"
                                                                                  Style="{DynamicResource ListViewStyle}"
                                                                                  HorizontalContentAlignment="Left"
                                                                                  Background="Transparent"
                                                                                  BorderThickness="0"
                                                                                  ItemsSource="{Binding TopicGrades}"
                                                                                  ScrollViewer.CanContentScroll="False"
                                                                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                                                                    <ListView.Resources>
                                                                        <Style TargetType="ListViewItem">
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="Margin" Value="0"/>
                                                                            <Setter Property="Padding" Value="0"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="ListViewItem">
                                                                                        <Grid Margin="35,7">

                                                                                            <Grid Grid.Row="0">
                                                                                                <Grid.ColumnDefinitions>
                                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                                    <ColumnDefinition/>
                                                                                                </Grid.ColumnDefinitions>

                                                                     

                                                                                                <Grid Grid.Column="0">
                                                                                                    <Grid.RowDefinitions>
                                                                                                        <RowDefinition Height="Auto"/>
                                                                                                        <RowDefinition/>
                                                                                                    </Grid.RowDefinitions>

                                                                                                    <TextBlock Text="{Binding name}"
                                                                                                                       Grid.Row="0"
                                                                                                                       VerticalAlignment="Bottom"
                                                                                                                       Margin="0,0,0,10"
                                                                                                                       Foreground="#172B4D"
                                                                                                                       Style="{DynamicResource Heading.Medium.SemiBold}"/>

                                                                                                    <StackPanel Orientation="Horizontal"
                                                                                                                Grid.Row="1">
                                                                                                        <TextBlock Text="{Binding score}"
                                                                                                                   Foreground="#505255"
                                                                                                                   Style="{DynamicResource Body.Medium.Regular}"/>

                                                                                                        <TextBlock Text="/"
                                                                                                                   Foreground="#505255"
                                                                                                                   Style="{DynamicResource Body.Medium.Regular}"/>

                                                                                                        <TextBlock Text="{Binding totalScore}"
                                                                                                                   Foreground="#505255"
                                                                                                                   Style="{DynamicResource Body.Medium.Regular}"/>
                                                                                                    </StackPanel>



                                                                                                </Grid>
                                                                                            </Grid>


                                                                                        </Grid>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>

                                                                        </Style>
                                                                    </ListView.Resources>
                                                                </ListView>
                                                            </Grid>

                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                        </Style>
                                    </ListView.Resources>
                                </ListView>
                            </Grid>

                        </StackPanel>

                    </StackPanel>

                </ScrollViewer>

            </Grid>


            <Border.RenderTransform>
                <TranslateTransform/>
            </Border.RenderTransform>

            <Border.Style>
                <Style TargetType="Border" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Visibility}" Value="Visible">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{DynamicResource Animate.SlideInUpDelayedMid}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

        </Border>

        <Border Name="ReportErrorModal"
                Background="White"
                CornerRadius="10"
                Visibility="Hidden"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Grid.Column="0"
                Grid.ColumnSpan="2">

            <Grid Margin="0,0,0,15"
                  Height="480" 
                  Width="500">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Margin="35,23,30,23"
                      Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                   
                    <TextBlock Grid.Column="1"
                               FontSize="15"
                               FontWeight="Bold"
                               Foreground="#172B4D"
                               VerticalAlignment="Center"
                               Margin="0"
                               TextWrapping="Wrap">
                        Report Error
                    </TextBlock>

                    <Button Grid.Column="2"
                            Click="CloseButton_OnClick"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Focusable="False"
                            Cursor="Hand"
                            Style="{DynamicResource CloseButton}">

                        <Canvas Width="24"
                                Height="24"
                                Name="CrossIcon"
                                Grid.Column="0" 
                                VerticalAlignment="Top">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Path Data="{StaticResource Icons.Times}"
                                  StrokeThickness="0" StrokeEndLineCap="Round"
                                  Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                        </Canvas>

                    </Button>

                </Grid>

                <Separator Background="#F4F4F4"
                           Margin="0"
                           Grid.Row="0"
                           VerticalAlignment="Bottom"/>


                <StackPanel Margin="35,20"
                            Grid.Row="1">

                    <TextBlock TextAlignment="Justify"
                               TextWrapping="Wrap"
                               Style="{DynamicResource Body.Small.Regular}"
                               Foreground="#505255"
                               Margin="3,15,3,10">
                       Where did you find the error?
                    </TextBlock>

                    <ComboBox Height="40"
                              Name="ErrorTypeComboBox"
                              Background="White"
                              SelectedIndex="0">

                        <ComboBoxItem Content="Question" Foreground="Black"/>
                        <ComboBoxItem Content="Answer" Foreground="Black"/>
                        <ComboBoxItem Content="Options" Foreground="Black"/>
                        <ComboBoxItem Content="Explanation" Foreground="Black"/>

                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                
                                <EventSetter Event="PreviewMouseDown"
                                             Handler="item_PreviewMouseDown"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <Grid Margin="0,25">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0"
                                      Margin="3,5">
                            <TextBlock Text="Comment (optional)"
                                               Foreground="#172B4D"
                                               Style="{DynamicResource Body.Small.SemiBold}"/>

                            <TextBlock Foreground="{DynamicResource ThemeRed}"
                                               Style="{DynamicResource Body.Small.SemiBold}"
                                               HorizontalAlignment="Right"
                                               Name="NumberError"/>
                        </Grid>

                        <TextBox Style="{DynamicResource TextBoxStyle}"
                                         Height="150"
                                         Padding="15,15"
                                         Grid.Row="1"
                                         TextWrapping="Wrap"
                                         Background="#F4F4F4"
                                         Foreground="Black"
                                         VerticalContentAlignment="Top"
                                         Name="CommentTextBox"/>

                        <TextBlock Text="Enter Comment"
                                           Grid.Row="1"
                                           Margin="20,0"
                                           Padding="0,16"
                                           Height="48"
                                           IsHitTestVisible="False"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Left"
                                           Foreground="{DynamicResource ThemeGrey}">

                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CommentTextBox, Path=Text}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                </StackPanel>

                <Grid Grid.Row="2"
                      Margin="38,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Style="{DynamicResource ThemeButton}"
                            Height="40"
                            Margin="15,0,0,0"
                            Grid.Column="1"
                            FontWeight="SemiBold"
                            HorizontalAlignment="Right"
                            Padding="40,0"
                            Name="SubmitButton"
                            Click="SubmitButton_OnClick">
                        <TextBlock Style="{DynamicResource Body.Medium.SemiBold}"
                                   Text="Submit"/>
                    </Button>

                    <Button Height="40"
                            Grid.Column="0"
                            Name="CancelButton"
                            HorizontalAlignment="Right"
                            Click="CloseButton_OnClick" 
                            BorderThickness="0"
                            IsCancel="True"
                        
                            VerticalContentAlignment="Center"
                            Style="{DynamicResource NeutralItemButtonStyle}">

                        <TextBlock Style="{DynamicResource Body.Medium.SemiBold}"
                                   Text="Cancel"
                                   Foreground="#505255"
                                   Margin="45,0"/>

                    </Button>
                </Grid>

            </Grid>

            <Border.RenderTransform>
                <TranslateTransform/>
            </Border.RenderTransform>

            <Border.Style>
                <Style TargetType="Border" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Visibility}" Value="Visible">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{DynamicResource Animate.SlideInUpDelayedMid}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <!--Modals-->

        <Grid Grid.Column="0"
              Grid.ColumnSpan="2"
              Name="LoadingOverlay"
              Visibility="Hidden">

            <Rectangle Fill="#FF000000"
                       Opacity="0.4"/>

            <Grid VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock FontFamily="{DynamicResource FontAwesome5.FreeSolid}"
                           Text="&#xf1ce;"
                           Grid.Row="0"
                           RenderTransformOrigin="0.5,0.5"
                           Foreground="White"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <TextBlock.RenderTransform>
                        <RotateTransform Angle="0" />
                    </TextBlock.RenderTransform>

                    <TextBlock.Style>
                        <Style TargetType="TextBlock" >
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=LoadingOverlay, Path=Visibility}" Value="Visible">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{DynamicResource Animate.Rotate}"/>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>

                </TextBlock>

                <TextBlock Text="Loading..."
                           Style="{DynamicResource Heading.Medium.SemiBold}"
                           Foreground="White"
                           Grid.Row="1"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="0,10,0,0"/>
            </Grid>
        </Grid>

       

    </Grid>
</Window>
